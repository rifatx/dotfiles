" ref: https://vi.stackexchange.com/a/10320

command -nargs=1 TabExpand call HandleTabTagExpand( <f-args> )

let s:commentchar = """

function HandleTabTagExpand(tagnumber)
    let tagident = expand("<cword>")
    redir @a
    try
        sil exe "tselect ".tagident
    catch /^Vim(\a\+):E433:/ " no tag file
        echom "No tag file found."
        return
    catch /^Vim(\a\+):E426:/ " tag not found
        echom "Tag not found."
        return
    endtry
    redir END
    let tagresults = split(@a, "\n")
    let tagmatches = []
    let linenum = 0
    for line in tagresults
        if linenum % 3 != 1
            " every third line contains the file names
            let linenum = linenum + 1
            continue
        endif
        " figure out where the filename actually starts
        " (it's usually column 32, but it might be farther)
        " one before 32 is 31, but index is 30 since arrays begin at zero
        let filestart = 30
        let c = line[filestart]
        while (filestart < strlen(line))
            let filestart = filestart + 1
            if c == " "
                break
            endif
            let c = line[filestart]
        endwhile
        " store the parsed match in an array
        call add(tagmatches, strpart(line, filestart))
        let linenum = linenum + 1
    endfor
    " navigate to the match specified by tagnumber
    try
        exe "tab drop ".tagmatches[a:tagnumber-1]
    catch /^Vim(\a\+):E471:/ " argument required (means no tag found)
        echom "Tag not found."
    endtry
    let done = 0
    let matchcount = 0
    let f_line = ""
    while done < 1 && matchcount < 1000
        sil exe "/".tagident
        let f_line = getline(".")
        let matchcount = matchcount + 1
        if match(f_line, "^\s+".s:commentchar) < 0
            let done = 1
        endif
    endwhile
    let f_index = stridx( f_line, tagident )
    sil exe "normal 0"
    sil exe "normal ".f_index."l"
endfunction
